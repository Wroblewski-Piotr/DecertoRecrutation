{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-strategy/add-strategy.component.ts","./src/app/components/add-strategy/add-strategy.component.html","./src/app/components/selected-strategy/selected-strategy.component.ts","./src/app/components/selected-strategy/selected-strategy.component.html","./src/app/core/model/SubjectPropagatorObject.ts","./src/app/core/sheredComponents/button/button.component.ts","./src/app/core/sheredComponents/button/button.component.html","./src/app/core/sheredComponents/component-supplier/DeliverableComponentEnum.ts","./src/app/core/sheredComponents/component-supplier/DeliverableComponentsStore.ts","./src/app/core/sheredComponents/component-supplier/component-supplier.component.ts","./src/app/core/sheredComponents/component-supplier/component-supplier.component.html","./src/app/core/sheredComponents/list/list.component.ts","./src/app/core/sheredComponents/list/list.component.html","./src/app/core/sheredComponents/modal/modal.component.ts","./src/app/core/sheredComponents/modal/modal.component.html","./src/app/core/sheredComponents/modal/modal.service.ts","./src/app/core/sheredComponents/spinner/spinner.component.ts","./src/app/core/sheredComponents/spinner/spinner.component.html","./src/app/core/utils/ArrayUtils.ts","./src/app/core/utils/logUtils.ts","./src/app/core/utils/mapUtils.ts","./src/app/model/StrategyDto.ts","./src/app/model/StrategyProcessScore.ts","./src/app/service/global.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { StrategyDTO } from './model/strategyDto';\nimport { DeliverableComponentEnum } from './core/sheredComponents/component-supplier/DeliverableComponentEnum';\nimport { SubjectPropagatorObject } from './core/model/SubjectPropagatorObject';\nimport { GlobalService } from './service/global.service';\nimport { ArrayUtils } from './core/utils/ArrayUtils';\nimport { StrategyProcessScore } from './model/StrategyProcessScore';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  selectedStrategiesChain: Array<StrategyProcessScore> = new Array<StrategyProcessScore>();\n  compatybilesStrategies: Array<StrategyDTO> = new Array<StrategyDTO>();\n  isCompatybilesStrategiesLoading = false;\n  isSelectedStrategiesChainLoading = false;\n\n  constructor(private golbalService: GlobalService) {}\n\n  ngOnInit(): void {\n    this.reloadCompatybilesStrategies();\n  }\n\n  reloadCompatybilesStrategies() {\n    this.compatybilesStrategies = new Array<StrategyDTO>();\n\n    this.isCompatybilesStrategiesLoading = true;\n    if (this.selectedStrategiesChain.length === 0) {\n      this.golbalService.getAllGenerateDataStrategy().subscribe(strategies => {\n        this.compatybilesStrategies = strategies;\n        this.isCompatybilesStrategiesLoading = false;\n       });\n    } else {\n      const lastSelectedStrategy = this.selectedStrategiesChain[this.selectedStrategiesChain.length - 1].strategyDto;\n      this.golbalService.getAllcompatybileProcessDataStrategies(lastSelectedStrategy.qualifier).subscribe(strategies => {\n        this.compatybilesStrategies = strategies;\n        this.isCompatybilesStrategiesLoading = false;\n       });\n    }\n  }\n\n  openAddStrategyModal() {\n    this.golbalService.setPropagator(new SubjectPropagatorObject(1, null));\n  }\n\n  addToselectedStrategiesChain(strategyDTO: StrategyDTO) {\n    this.selectedStrategiesChain.push(new StrategyProcessScore(strategyDTO, null));\n    this.reloadCompatybilesStrategies();\n  }\n\n  deleteStrategyFromStrategiesChain(strategyProcessScore: StrategyProcessScore) {\n    ArrayUtils.deleteElementFromArray(this.selectedStrategiesChain, strategyProcessScore);\n    this.reloadCompatybilesStrategies();\n  }\n\n  execute() {\n    this.isSelectedStrategiesChainLoading = true;\n    this.golbalService.execute(this.selectedStrategiesChain).subscribe(x => {\n      this.selectedStrategiesChain = x;\n      this.isSelectedStrategiesChainLoading = false;\n    });\n  }\n\n  deleteAllScores() {\n    this.selectedStrategiesChain.forEach( x => x.processScore = null);\n  }\n\n  clearAllselectedStrategiesChain() {\n    this.selectedStrategiesChain = new Array<StrategyProcessScore>();\n    this.reloadCompatybilesStrategies();\n  }\n\n  isItExecuted(): boolean {\n    if (this.selectedStrategiesChain.length > 0 && this.selectedStrategiesChain[0].processScore != null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  createNewMap() {\n    return new Map<string, any>();\n  }\n  getDeliverableComponentEnumAddStrategy() {\n    return DeliverableComponentEnum.AddStrategy;\n  }\n  getDeliverableComponentEnumSelectedeStrategy() {\n    return DeliverableComponentEnum.SelectedStrategy;\n  }\n}\n","<div class=\"container\">\n  <div (click)=\"openAddStrategyModal()\" class=\"btn btn-success\" *ngIf=\"!isItExecuted()\"\n    style=\"width: 100%; margin-top: 50px; margin-bottom: 50px\">Dodaj strategie</div>\n\n  <div [style]=\"isItExecuted() ? 'margin-top: 134px' : ''\"></div>\n\n  <app-list\n    [deliverableComponentEnum]=\"getDeliverableComponentEnumSelectedeStrategy()\"\n    [objectList]=\"selectedStrategiesChain\" [nameOfBaseObject]=\"'strategyProcessScore'\"\n    [parametersOfInnerComponent]=\"createNewMap().set('parentComponent', this)\">\n  </app-list>\n\n  <div (click)=\"deleteAllScores()\" class=\"btn btn-warning\" style=\"width: 100%; margin-top: 1px; margin-bottom: 10px\" *ngIf=\"isItExecuted()\">Wyczyść wyniki</div>\n  <div (click)=\"clearAllselectedStrategiesChain()\" class=\"btn btn-danger\" style=\"width: 100%; margin-top: 1px; margin-bottom: 10px\" *ngIf=\"selectedStrategiesChain.length > 0\">Wyczyść wszystkie strategie</div>\n\n  <app-button *ngIf=\"selectedStrategiesChain.length > 0 && !isItExecuted()\" (click)=\"execute()\"\n    [buttonClassName]=\"'btn btn-primary'\"\n    [beforeSpinnerMessage]=\"'zaczekaj'\"\n    [showSpinner]=\"isSelectedStrategiesChainLoading\"\n    [textWheneSpinnerNotActive]=\"'Wykonaj'\">\n  </app-button>\n</div>\n\n<MPW-CMS-modal [importParameters]=\"createNewMap()\n  .set('deliverableComponentEnum', getDeliverableComponentEnumAddStrategy())\n  .set('addCloseButton', true)\n  .set('title', 'dodaj strategie')\n  .set('parametersOfInnerComponent',\n    createNewMap()\n    .set('parentComponent', this))\">\n</MPW-CMS-modal>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ButtonComponent } from './core/sheredComponents/button/button.component';\nimport { ComponentSupplierComponent } from './core/sheredComponents/component-supplier/component-supplier.component';\nimport { ModalComponent } from './core/sheredComponents/modal/modal.component';\nimport { SpinnerComponent } from './core/sheredComponents/spinner/spinner.component';\nimport { ListComponent } from './core/sheredComponents/list/list.component';\nimport { SelectedStrategyComponent } from './components/selected-strategy/selected-strategy.component';\nimport { AddStrategyComponent } from './components/add-strategy/add-strategy.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonComponent,\n    ComponentSupplierComponent,\n    ModalComponent,\n    SpinnerComponent,\n    ListComponent,\n    SelectedStrategyComponent,\n    AddStrategyComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { ModalService } from 'src/app/core/sheredComponents/modal/modal.service';\nimport { GlobalService } from 'src/app/service/global.service';\nimport { Subscription } from 'rxjs';\nimport { StrategyDTO } from 'src/app/model/strategyDto';\nimport { AppComponent } from 'src/app/app.component';\nimport { MapUtils } from 'src/app/core/utils/mapUtils';\n\n@Component({\n  selector: 'app-add-strategy',\n  templateUrl: './add-strategy.component.html',\n  styleUrls: ['./add-strategy.component.css']\n})\nexport class AddStrategyComponent implements OnInit, OnDestroy {\n\n  @Input()\n  importParameters = new Map<string, any>();\n\n  parentComponent: AppComponent;\n\n  openAddNewObjectSubscription: Subscription;\n\n  constructor(private globalService: GlobalService,\n              private modalService: ModalService) { }\n\n  ngOnInit(): void {\n\n    this.parentComponent = MapUtils.getParametrFromMap('parentComponent', this.importParameters, 'SelectedStrategyComponent');\n\n    this.openAddNewObjectSubscription = this.globalService.getPropagator().subscribe(subjectPropagatorObject => {\n      if (subjectPropagatorObject.actionId === 1) {\n        this.modalService.openModalByUUID(this.importParameters.get('modalUUID'));\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.openAddNewObjectSubscription.unsubscribe();\n  }\n\n}\n","<div style=\"padding-bottom: 30px; margin-bottom: 30px; border-bottom: 2px solid #ffc107\">\n  <div *ngIf=\"parentComponent.selectedStrategiesChain.length == 0\" style=\"margin-top: 10px;\">\n    Strategie pozyskiwania danych :\n  </div>\n\n  <div *ngIf=\"parentComponent.selectedStrategiesChain.length != 0\">\n    Strategie kompatybilne do strategi :\n    <div style=\"margin-top: 10px;\">\n      nazwa - {{parentComponent.selectedStrategiesChain[parentComponent.selectedStrategiesChain.length-1].strategyDto.qualifier}}\n      <br>\n      opis - {{parentComponent.selectedStrategiesChain[parentComponent.selectedStrategiesChain.length-1].strategyDto.description}}\n    </div>\n  </div>\n</div>\n\n<ng-container *ngIf=\"!parentComponent.isCompatybilesStrategiesLoading\">\n  <div *ngFor=\"let strategy of parentComponent.compatybilesStrategies\"\n    style=\"display: flex; padding-bottom: 30px; margin-bottom: 30px; border-bottom: 2px solid #ffc107\">\n    <div style=\"width: 80%;\">\n      nazwa - {{strategy.qualifier}}\n      <br>\n      opis - {{strategy.description}}\n    </div>\n    <div style=\"width: 15%; display: flex; align-items: center;\"\n      (click)=\"parentComponent.addToselectedStrategiesChain(strategy)\" class=\"btn btn-success\">\n      <div style=\"margin: auto;\">Dodaj</div>\n    </div>\n  </div>\n</ng-container>\n\n<app-spinner\n  [beforeSpinnerMessage]=\"'trwa ładowanie'\"\n  [showSpinner]=\"parentComponent.isCompatybilesStrategiesLoading\">\n</app-spinner>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { StrategyDTO } from 'src/app/model/strategyDto';\nimport { MapUtils } from 'src/app/core/utils/mapUtils';\nimport { AppComponent } from 'src/app/app.component';\nimport { StrategyProcessScore } from 'src/app/model/StrategyProcessScore';\n\n@Component({\n  selector: 'app-selected-strategy',\n  templateUrl: './selected-strategy.component.html',\n  styleUrls: ['./selected-strategy.component.css']\n})\nexport class SelectedStrategyComponent implements OnInit {\n\n  @Input()\n  importParameters = new Map<string, any>();\n\n  strategyProcessScore: StrategyProcessScore;\n  parentComponent: AppComponent;\n\n  onlyGetDataStrategy: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.strategyProcessScore = MapUtils.getParametrFromMap('strategyProcessScore', this.importParameters, 'SelectedStrategyComponent');\n    this.parentComponent = MapUtils.getParametrFromMap('parentComponent', this.importParameters, 'SelectedStrategyComponent');\n  }\n\n  amILast() {\n    return this.strategyProcessScore === this.parentComponent.selectedStrategiesChain[this.parentComponent.selectedStrategiesChain.length - 1];\n  }\n\n}\n","<div style=\"display: flex; margin-bottom: 30px\"\n  [style]=\"!amILast() ? 'border-bottom: 2px solid #ffc107; padding-bottom: 30px' : ''\">\n  <div style=\"width: 80%;\">\n    nazwa - {{strategyProcessScore.strategyDto.qualifier}}\n    <br>\n    opis - {{strategyProcessScore.strategyDto.description}}\n\n    <div *ngIf=\"strategyProcessScore.processScore != null\">\n      <b>Wynik operacji</b> -\n      <br>\n      {{strategyProcessScore.processScore | json}}\n    </div>\n\n  </div>\n\n  <div style=\"width: 20%; height: 50px; display: flex; align-items: center;\" class=\"btn btn-danger\"\n  (click)=\"parentComponent.deleteStrategyFromStrategiesChain(strategyProcessScore)\" *ngIf=\"amILast() && !parentComponent.isItExecuted()\">\n    <div style=\"margin: auto;\">Usuń</div>\n  </div>\n</div>\n","export class SubjectPropagatorObject<T> {\r\n\r\n  constructor(actionId: number, data: T) {\r\n    this.actionId = actionId;\r\n    this.data = data;\r\n  }\r\n\r\n  public actionId: number;\r\n  public data: T;\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css']\n})\nexport class ButtonComponent implements OnInit {\n\n  @Input()\n  buttonClassName: string;\n\n  @Input()\n  spinnerClassName: string;\n  @Input()\n  beforeSpinnerMessage: string;\n  @Input()\n  showSpinner: boolean;\n  @Input()\n  textWheneSpinnerNotActive: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.buttonClassName = this.buttonClassName != null ? this.buttonClassName : 'btn btn-success';\n  }\n\n}\n","<button [ngClass]=\"buttonClassName\" [disabled]=\"showSpinner\" style=\"width: 100%; margin-top: 50px; margin-bottom: 50px; display: block; margin: auto\" >\n  <app-spinner\n    [spinnerClassName]='spinnerClassName'\n    [beforeSpinnerMessage]=\"beforeSpinnerMessage\"\n    [showSpinner]=\"showSpinner\"\n    [textWheneSpinnerNotActive]=\"textWheneSpinnerNotActive\">\n  </app-spinner>\n</button>\n","export enum DeliverableComponentEnum {\r\n  SelectedStrategy,\r\n  AddStrategy\r\n}\r\n","import { DeliverableComponentEnum } from './DeliverableComponentEnum';\r\nimport { SelectedStrategyComponent } from 'src/app/components/selected-strategy/selected-strategy.component';\r\nimport { AddStrategyComponent } from 'src/app/components/add-strategy/add-strategy.component';\r\n\r\nexport class DeliverableComponentsStore {\r\n\r\n  static deliverableComponentsMap = new Map<DeliverableComponentEnum, any>()\r\n  .set(DeliverableComponentEnum.SelectedStrategy, SelectedStrategyComponent)\r\n  .set(DeliverableComponentEnum.AddStrategy, AddStrategyComponent);\r\n\r\n}\r\n\r\n","import { Component, OnInit, Input, ViewChild, ViewContainerRef, ComponentFactoryResolver, ChangeDetectorRef, AfterViewInit } from '@angular/core';\nimport { DeliverableComponentEnum } from './DeliverableComponentEnum';\nimport { DeliverableComponentsStore } from './DeliverableComponentsStore';\n\n\n@Component({\n  selector: 'MPW-CMS-component-supplier',\n  templateUrl: './component-supplier.component.html',\n  styleUrls: ['./component-supplier.component.css']\n})\nexport class ComponentSupplierComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('vf', {read: ViewContainerRef})\n  vf: ViewContainerRef;\n\n  @Input()\n  deliverableComponentEnum: DeliverableComponentEnum;\n  @Input()\n  importParameters = new Map<string, any>();\n\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, private cdr: ChangeDetectorRef){\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit(): void {\n    const resolver = this.componentFactoryResolver.resolveComponentFactory\n    (DeliverableComponentsStore.deliverableComponentsMap.get(this.deliverableComponentEnum));\n\n    const componentFactory =   this.vf.createComponent(resolver);\n\n    componentFactory.instance['importParameters'] = this.importParameters;\n\n    this.cdr.detectChanges();\n  }\n\n}\n","<ng-template #vf></ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { DeliverableComponentEnum } from '../component-supplier/DeliverableComponentEnum';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  @Input()\n  deliverableComponentEnum: DeliverableComponentEnum;\n  @Input()\n  objectList: Array<any>;\n  @Input()\n  parametersOfInnerComponent: Map<string, any>;\n  @Input()\n  nameOfBaseObject: string;\n\n  // spinner parameters\n  @Input()\n  spinnerClassName: string;\n  @Input()\n  beforeSpinnerMessage: string;\n  @Input()\n  showSpinner: boolean;\n\n  // parametr stylowania listy\n  @Input()\n  listClass: string;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    this.parametersOfInnerComponent = this.parametersOfInnerComponent != null\n    ? this.parametersOfInnerComponent\n    : new Map<string, any>();\n\n    this.listClass = this.listClass != null\n    ? this.listClass\n    : 'list';\n  }\n\n  createExportParameters(object: any): Map<string, any> {\n    const map = this.parametersOfInnerComponent;\n    map.set(this.nameOfBaseObject, object);\n    return map;\n  }\n\n}\n","<ul *ngIf=\"objectList != null && showSpinner != true\" [ngClass]=\"listClass\">\n  <li *ngFor=\"let object of objectList\">\n    <MPW-CMS-component-supplier\n        [deliverableComponentEnum]=\"deliverableComponentEnum\"\n        [importParameters]=\"createExportParameters(object)\">\n      </MPW-CMS-component-supplier>\n  </li>\n</ul>\n\n<app-spinner\n  [spinnerClassName]='spinnerClassName'\n  [beforeSpinnerMessage]=\"beforeSpinnerMessage\"\n  [showSpinner]=\"showSpinner\">\n</app-spinner>\n","import * as uuid from 'uuid';\n\nimport { Component, OnInit, Input, HostListener, OnDestroy } from '@angular/core';\nimport { ModalService } from './modal.service';\nimport { Subscription } from 'rxjs';\nimport { DeliverableComponentEnum } from '../component-supplier/DeliverableComponentEnum';\nimport { MapUtils } from '../../utils/mapUtils';\n@Component({\n  selector: 'MPW-CMS-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n\n  constructor(private modalService: ModalService) { }\n\n  @Input()\n  importParameters = new Map<string, any>();\n\n  title: string;\n  deliverableComponentEnum: DeliverableComponentEnum;\n  addCloseButton: boolean;\n  parametersOfInnerComponent: Map<string, any>;\n  zIndex: number;\n  modalSizeClass: string;\n  // <!-- title, selector, addCloseButton, parametersOfInnerComponent, zIndex -->\n  uuid: string;\n  modalId: string;\n  isItOpen = false;\n  openModalSubscription: Subscription;\n  ngOnInit() {\n    this.uuid = uuid.v4();\n    this.deliverableComponentEnum = MapUtils.getParametrFromMap('deliverableComponentEnum', this.importParameters, 'ModalComponent');\n    this.title = MapUtils.getParametrFromMapOrGetDefault('title', this.importParameters, '');\n    this.addCloseButton = MapUtils.getParametrFromMapOrGetDefault('addCloseButton', this.importParameters, true);\n    this.parametersOfInnerComponent = MapUtils.getParametrFromMapOrGetDefault('parametersOfInnerComponent', this.importParameters, new Map<string, any>());\n    this.zIndex = MapUtils.getParametrFromMapOrGetDefault('zIndex', this.importParameters, 1);\n    this.modalSizeClass = MapUtils.getParametrFromMapOrGetDefault('modalSizeClass', this.importParameters, 'modal-classic');\n    this.parametersOfInnerComponent.set('modalUUID', this.uuid);\n    this.modalId = 'myModal' + this.uuid;\n    this.openModalSubscription = this.modalService.getModalPropagator().subscribe(x => {\n      if (x.data === this.uuid) {\n        if (x.actionId === 1) {\n          this.isItOpen = true;\n          this.openModal();\n        }\n        else if (x.actionId === 2 && this.isItOpen) {\n          this.isItOpen = false;\n          this.closeModalByButton();\n        }\n      }\n    });\n  }\n  ngOnDestroy(): void {\n    this.openModalSubscription.unsubscribe();\n  }\n  openModal() {\n    const modal = document.getElementById(this.modalId);\n    modal.style.display = 'block';\n  }\n  closeModalByButton() {\n    const modal = document.getElementById(this.modalId);\n    modal.style.display = 'none';\n    this.modalService.closeModalByUUID(this.uuid);\n    this.isItOpen = false;\n  }\n  @HostListener('window:click', ['$event'])\n  onDocumentClick(event: MouseEvent) {\n    const modal = document.getElementById(this.modalId);\n    if (event.target === modal) {\n      this.modalService.closeModalByUUID(this.uuid);\n      modal.style.display = 'none';\n      this.isItOpen = false;\n    }\n  }\n}\n\n","<div [id]=\"'myModal' + uuid\" class=\"modal\" [ngStyle]=\"{'z-index': zIndex}\">\n  <div [ngClass]=\"'modal-content ' + modalSizeClass\">\n\n    <div class=\"modal-header\">\n      <span *ngIf=\"title != null\">{{title}}</span>\n      <span *ngIf=\"addCloseButton != null && addCloseButton === true\" class=\"close\" (click)=\"closeModalByButton()\">&times;</span>\n    </div>\n\n    <div class=\"modal-body\">\n      <MPW-CMS-component-supplier\n        [deliverableComponentEnum]=\"deliverableComponentEnum\"\n        [importParameters]=\"parametersOfInnerComponent\">\n      </MPW-CMS-component-supplier>\n    </div>\n\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { SubjectPropagatorObject } from '../../model/SubjectPropagatorObject';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  private modalPropagator = new Subject<SubjectPropagatorObject<any>>();\n  // 1 - open modal\n  // 2 - close modal\n\n  constructor() { }\n\n  public setModalPropagator(subjectPropagatorObject: SubjectPropagatorObject<string>) {\n    this.modalPropagator.next(subjectPropagatorObject);\n  }\n  public getModalPropagator(): Observable<SubjectPropagatorObject<string>> {\n    return this.modalPropagator.asObservable();\n  }\n\n  public openModalByUUID(modalUUID: string) {\n    if (modalUUID != null) {\n      this.setModalPropagator(new SubjectPropagatorObject(1, modalUUID));\n    }\n  }\n  public closeModalByUUID(modalUUID: string) {\n    if (modalUUID != null) {\n      this.setModalPropagator(new SubjectPropagatorObject(2, modalUUID));\n    }\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  @Input()\n  spinnerClassName: string;\n  @Input()\n  beforeSpinnerMessage: string;\n  @Input()\n  showSpinner: boolean;\n  @Input()\n  textWheneSpinnerNotActive: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.spinnerClassName = this.spinnerClassName != null ? this.spinnerClassName : 'spinner-border text-warning';\n    this.beforeSpinnerMessage = this.beforeSpinnerMessage != null ? this.beforeSpinnerMessage : '';\n    this.showSpinner = this.showSpinner != null ? this.showSpinner : false;\n    this.textWheneSpinnerNotActive = this.textWheneSpinnerNotActive != null ? this.textWheneSpinnerNotActive : '';\n  }\n\n}\n","<div class=\"flex-box-container-spinner\" *ngIf=\"showSpinner\">\n  <div style=\"padding-right: 10px\">{{beforeSpinnerMessage}}</div>\n  <div [ngClass]=\"spinnerClassName\"></div>\n</div>\n<span *ngIf=\"!showSpinner\">{{textWheneSpinnerNotActive}}</span>\n","export class ArrayUtils {\r\n\r\n  public static deleteElementFromArray(array: Array<any>, object: any): any {\r\n    const index = array.indexOf(object, 0);\r\n    if (index > -1) {\r\n      array.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","export class LogUtils {\r\n\r\n  public static log(msg: string, componentClassName: string) {\r\n    console.log(new Date() + ': ' + componentClassName + ': '\r\n      + JSON.stringify(msg));\r\n  }\r\n}\r\n","import { LogUtils } from './logUtils';\r\n\r\nexport class MapUtils {\r\n\r\n  public static getParametrFromMap(parametrName: string, parametersMap: Map<string, any>, className: string): any {\r\n    const parametr: any = parametersMap.get(parametrName);\r\n    if (parametr === undefined) {\r\n      LogUtils.log('In pass map cant find parameter with name - ' + parametrName, className);\r\n    }\r\n    return parametr;\r\n  }\r\n\r\n  public static getParametrFromMapOrGetDefault(parametrName: string, parametersMap: Map<string, any>, defaultValue: any): any{\r\n    const parametr: any = parametersMap.get(parametrName);\r\n    if (parametr === undefined) {\r\n      return defaultValue;\r\n    }\r\n    return parametr;\r\n  }\r\n\r\n  public static objToMap(obj): Map<string, Array<string>> {\r\n    const map: Map<string, Array<string>> = new Map();\r\n    for (const k of Object.keys(obj)) {\r\n      map.set(k, obj[k]);\r\n    }\r\n    return map;\r\n  }\r\n\r\n  public static getArrayFromMap(map: Map<any, any>, name: any): Array<any> {\r\n    return map.get(name) !== undefined ? map.get(name) : new Array();\r\n  }\r\n\r\n  public static getValuesListFromMap(map: Map<string, any>): Array<any> {\r\n    return Array.from(map, ([key, value]) => value);\r\n  }\r\n\r\n  public static getKeysListFromMap(map: Map<string, any>): Array<string> {\r\n    return Array.from(map, ([key, value]) => key);\r\n  }\r\n}\r\n","export class StrategyDTO {\r\n  qualifier: string;\r\n  description: string;\r\n\r\n  public static deserialize(input: any) {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const object = new this();\r\n\r\n    object.description = input.description;\r\n    object.qualifier = input.qualifier;\r\n\r\n    return object;\r\n  }\r\n}\r\n","import { StrategyDTO } from './StrategyDto';\r\n\r\nexport class StrategyProcessScore {\r\n\r\n  constructor(strategyDto: StrategyDTO, processScore: object) {\r\n    this.strategyDto = strategyDto;\r\n    this.processScore = processScore;\r\n  }\r\n\r\n  strategyDto: StrategyDTO;\r\n  processScore: object;\r\n\r\n  public static deserialize(input: any) {\r\n    if (input == null) {\r\n      return null;\r\n    }\r\n    const object = new this(null, null);\r\n\r\n    object.strategyDto = StrategyDTO.deserialize(input.strategyDTO);\r\n    object.processScore = input.processScore;\r\n\r\n    return object;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, Observable } from 'rxjs';\nimport { SubjectPropagatorObject } from '../core/model/SubjectPropagatorObject';\nimport { StrategyDTO } from '../model/strategyDto';\nimport { StrategyProcessScore } from '../model/StrategyProcessScore';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  constructor(private http: HttpClient) { }\n\n  // 1 - open add strategy modal\n  private propagator = new Subject<SubjectPropagatorObject<any>>();\n\n  public setPropagator(subjectPropagatorObject: SubjectPropagatorObject<any>) {\n    this.propagator.next(subjectPropagatorObject);\n  }\n  public getPropagator(): Observable<SubjectPropagatorObject<any>> {\n    return this.propagator.asObservable();\n  }\n\n  public getAllGenerateDataStrategy(): Observable<Array<StrategyDTO>> {\n    return this.http.get<Array<StrategyDTO>>('/getGenerateDataStrategies');\n  }\n\n  public getAllcompatybileProcessDataStrategies(strategyQualifier: string): Observable<Array<StrategyDTO>> {\n    return this.http.get<Array<StrategyDTO>>('/getCompatibleStrategies?strategyQualifier=' + strategyQualifier);\n  }\n\n  public execute(strategyProcessScore: Array<StrategyProcessScore>) {\n    return this.http.get<Array<StrategyProcessScore>>('/process' + this.createParametersForExecuteUrl(strategyProcessScore)).pipe(\n      map ((listOfObject: Array<object>) => {\n        const listOfStrategyProcessScore = new Array<StrategyProcessScore>();\n        listOfObject.forEach(x => {\n          listOfStrategyProcessScore.push(StrategyProcessScore.deserialize(x));\n        });\n        return listOfStrategyProcessScore;\n      })\n    );\n  }\n\n  private createParametersForExecuteUrl(strategyProcessScore: Array<StrategyProcessScore>): string {\n    let parameters = '?strategyQualifiers=';\n\n    strategyProcessScore.forEach(x => {\n      parameters = parameters + x.strategyDto.qualifier + ',';\n    });\n\n    parameters = parameters.substring(0, parameters.length - 1);\n\n    return parameters;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}